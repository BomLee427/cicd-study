name: Java CI with Gradle

on:
  push:
    branches: [ "study" ]

env:
  IMAGE_TAG: cicd-study:latest
  ECR_URL: 491092715218.dkr.ecr.ap-northeast-2.amazonaws.com/bom-cicd-study
  ROLE_ARN: arn:aws:iam::491092715218:role/cicd-study-oicd-role
  AWS_REGION: ap-northeast-2


jobs:
  prepare:
    name: Prepare Build
    runs-on: ubuntu-latest

    outputs:
      tag_date: ${{ steps.tag.outputs.date }}
      tag_git_hash: ${{ steps.tag.outputs.git_hash }}

    steps:
      - uses: actions/checkout@v3

      - name: Get time TAG
        id: tag
        run: |
          echo "date=$(date +'%Y%m%d.%H%M')" >> $GITHUB_OUTPUT
          echo "git_hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: prepare

    permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

    outputs:
      tag_date: ${{ steps.tag.outputs.date }}
      tag_git_hash: ${{ steps.tag.outputs.git_hash }}

    steps:
      - uses: actions/checkout@v3

      - name: set JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: 'gradle'

      - name: Run chmod to make gradlew executable
        run: chmod +x gradlew

      - name: Gradle Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - name: Docker build
        run: docker build -t ${{ env.IMAGE_TAG }} ./

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActions
          role-to-assume: ${{ env.ROLE_ARN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Publish Image to ECR
        run: |
          docker tag ${{ env.IMAGE_TAG }} ${{ env.ECR_URL }}:${{ needs.prepare.outputs.tag_date }}.${{ needs.prepare.outputs.tag_git_hash }}
          docker push ${{ env.ECR_URL }}:${{ needs.prepare.outputs.tag_date }}.${{ needs.prepare.outputs.tag_git_hash }}
